"use strict";

var assert = require('assert');
var Game = require('../../src/node_modules/models/Game');
var Player = require('../../src/node_modules/models/Player');
var PongUtils = require('../../src/node_modules/PongUtils');

var TestHelpers = module.exports;

TestHelpers.getPlayer = function*()
{
	playersCreated++;
	
	var p = new Player();
	p.name = 'Test Player ' + playersCreated;
	p.email = 'test' + playersCreated + '@test.com';
	p.affiliation = null;
	
	yield p.save();
	assert(p.id, 'player should have been saved');
	
	return p;
};

var playersCreated = 0;

/**
 * Creates players and saves the resulting game.
 * @return {Game}
 */
TestHelpers.getGame = function*(options)
{
	var defaults = 
	{
		game_type_id: Game.types.singles,
		
		team1: null,
		team1Score:11,
		
		team2: null,
		team2Score:8,
		
		expectsError: false
	};
	
	var settings = PongUtils.extend({}, defaults, options);
	
	var g = new Game();
	g.game_type_id = settings.game_type_id;
	
	var getPlayerArray = function*()
	{
		var a = [];
		a.push(yield TestHelpers.getPlayer());
		if (g.isDoublesGame())
		{
			a.push(yield TestHelpers.getPlayer());
		}
		return a;
	};
	
	g.team1 = settings.team1;
	if (!g.team1) g.team1 = yield getPlayerArray();
	g.team1Score = settings.team1Score;
	
	g.team2 = settings.team2;
	if (!g.team2) g.team2 = yield getPlayerArray();
	g.team2Score = settings.team2Score;
	
	g.recorded_by_player_id = g.team1[0].id;
	
	try
	{
		yield g.save();
	}
	catch (e)
	{
		if (settings.expectsError) 
			return e.message;
		
		throw new Error(e);
	}
	
	assert(g.id, 'game should have been saved');
	return g;
};