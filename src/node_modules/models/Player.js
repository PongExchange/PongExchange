"use strict";

var Sql = require('Sql'); 

var Player = module.exports;

/*
	returns all players 
 */
Player.getAll = function*()
{
	var result = null;
	yield Sql.using(function*(db)
	{
		var dbResult = yield db.query('SELECT id,name FROM players');
		result = dbResult.rows;
	});
	return result; 
};

/*
	returns the player with parameter 'id' or null if not found
 */
Player.getById = function*(id)
{
	var result = null;
	if (typeof id != 'number' || id <= 0) return result;
	
	yield Sql.using(function*(db)
	{
		var dbResult = yield db.query('select * from players where id = $1', [id]);
		if (dbResult.rowCount === 1)
		{
			result = dbResult.rows[0];
		}
	});
	
	return result; 
};

Player.getByEmail = function*(email)
{
	var result = null;
	if (typeof email != 'string' || email.length == 0) return result;
	
	yield Sql.using(function*(db)
	{
		var dbResult = yield db.query('select * from players where email = $1', [email.toLowerCase()]);
		
		// TODO: make unique constraint on email
		if (dbResult.rowCount === 1)
		{
			result = dbResult.rows[0];
		}
	});
	
	return result;
};

/*
	returns the id of the newly-inserted parameter 'player'; returns 0 if the insert failed
 */
Player.insert = function*(player)
{
	var result = 0;
	if (!player || (!player.name && !player.email)) return result;
	
	// emails should always be lower-cased, localization be damned for now
	if (player.email)
	{
		player.email = player.email.toLowerCase();
	}
	
	if (!player.name)
	{
		player.name = player.email;
	}
	
	yield Sql.using(function* (db) 
	{
		var dbResult = yield db.query(
			'insert into players (name, email, rating) values ($1, $2, $3) returning id;',
			[player.name, player.email, player.rating || 0]);
		
		if (dbResult.rowCount === 1)
		{
			result = dbResult.rows[0].id;
		}
	});
	
	return result;
};

