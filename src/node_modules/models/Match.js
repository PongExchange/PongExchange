"use strict";

var Game = require('models/Game');
var Player = require('models/Player');
var PongUtils = require('PongUtils');
var Sql = require('Sql');

module.exports = Match;

/**
 * Represents a group of contiguously-played games by the same players.
 * 
 * Currently, this acts like a sequence, only providing an identifier to put on the games table.
 * 
 * @constructor
 */
function Match()
{
	// columns
	this.id = 0;
}

/* -------------------------------------------------------------------
 * Getters / Setters
 * ---------------------------------------------------------------- */

 Object.defineProperties(Match.prototype,
{

});

/* -------------------------------------------------------------------
 * Prototype Methods << Keep in alphabetical order >>
 * ---------------------------------------------------------------- */

Match.prototype.addGame = function*(game)
{
	if (!game.id) throw new Error('may only add saved games');

	yield Sql.using(function*(db)
	{
		yield db.query('update games set match_id = $1 where id = $2', [this.id, game.id]);
		game.match_id = this.id;
	}.bind(this));
};


/* -------------------------------------------------------------------
 * Static Methods << Keep in alphabetical order >>
 * ---------------------------------------------------------------- */

/**
 * Returns a newly persisted {Match} whose id can be set on a {Game}'s matchId.
 */
Match.newMatch = function*()
{
	var m = new Match();
	
	yield Sql.using(function*(db)
	{
		var query = yield db.query('insert into matches values(default) returning id;');
		m.id = query.rows[0].id;
	});
	
	return m;
};