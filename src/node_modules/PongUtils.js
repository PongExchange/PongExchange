"use strict";

var PongUtils = module.exports;

/**
 * returns a more human-readable datetime string; taken from @see {@link http://stackoverflow.com/a/6109105/3}
 * @param date
 * @return {string}
 */
PongUtils.relativeTime = function(date)
{
	var msPerMinute = 60 * 1000;
	var msPerHour = msPerMinute * 60;
	var msPerDay = msPerHour * 24;
	var msPerMonth = msPerDay * 30;
	var msPerYear = msPerDay * 365;

	var elapsed = new Date() - date;

	if (elapsed < msPerMinute)
	{
		return Math.round(elapsed / 1000) + ' seconds ago';
	}
	else if (elapsed < msPerHour)
	{
		return Math.round(elapsed / msPerMinute) + ' minutes ago';
	}
	else if (elapsed < msPerDay)
	{
		return Math.round(elapsed / msPerHour) + ' hours ago';
	}
	else if (elapsed < msPerMonth)
	{
		return 'approximately ' + Math.round(elapsed / msPerDay) + ' days ago';
	}
	else if (elapsed < msPerYear)
	{
		return 'approximately ' + Math.round(elapsed / msPerMonth) + ' months ago';
	}
	else
	{
		return 'approximately ' + Math.round(elapsed / msPerYear) + ' years ago';
	}
};

PongUtils.slugify = function (str)
{
	if (!str)
		return '';
	
	return str.trim().toLowerCase().replace(/[\s?\/]+/g, '-');
};

/**
 * jQuery's extend method: merges the contents of two or more objects together into the first parameter object.
 * @see {@link https://github.com/jquery/jquery/blob/master/src/core.js#L124}
 * @return {{}}
 */
PongUtils.extend = function ()
{
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if (typeof target === "boolean")
	{
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if (typeof target !== "object" && !jQuery.isFunction(target))
	{
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if (i === length)
	{
		target = this;
		i--;
	}

	for (; i < length; i++)
	{
		// Only deal with non-null/undefined values
		if ((options = arguments[ i ]) != null)
		{
			// Extend the base object
			for (name in options)
			{
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if (target === copy)
				{
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if (deep && copy && ( jQuery.isPlainObject(copy) ||
					(copyIsArray = jQuery.isArray(copy)) ))
				{

					if (copyIsArray)
					{
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					}
					else
					{
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend(deep, clone, copy);

					// Don't bring in undefined values
				}
				else if (copy !== undefined)
				{
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};
