{
  "name": "co-body",
  "version": "1.0.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/visionmedia/co-body"
  },
  "description": "request body parsing for co",
  "keywords": [
    "request",
    "parse",
    "parser",
    "json",
    "co",
    "generators",
    "urlencoded"
  ],
  "dependencies": {
    "qs": "~1.0.0",
    "raw-body": "~1.1.1"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "koa": "git://github.com/koajs/koa",
    "supertest": "~0.8.2"
  },
  "license": "MIT",
  "readme": "\n# co-body\n\n  Parse request bodies with generators inspired by [Raynos/body](https://github.com/Raynos/body).\n\n## Installation\n\n```\n$ npm install co-body\n```\n\n## Options\n\n  Available via [raw-body](https://github.com/stream-utils/raw-body/blob/master/index.js):\n\n  - `limit` number or string representing the request size limit (1mb for json and 56kb for form-urlencoded)\n\n## Example\n\n```js\n// application/json\nvar body = yield parse.json(req);\n\n// explicit limit\nvar body = yield parse.json(req, { limit: '10kb' });\n\n// application/x-www-form-urlencoded\nvar body = yield parse.form(req);\n\n// either\nvar body = yield parse(req);\n```\n\n## Koa\n\n  This lib also supports `ctx.req` in Koa (or other libraries),\n  so that you may simply use `this` instead of `this.req`.\n\n```js\n// application/json\nvar body = yield parse.json(this);\n\n// application/x-www-form-urlencoded\nvar body = yield parse.form(this);\n\n// either\nvar body = yield parse(this);\n```\n\n# License\n\n  MIT",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/visionmedia/co-body/issues"
  },
  "homepage": "https://github.com/visionmedia/co-body",
  "_id": "co-body@1.0.0",
  "_shasum": "dab6c3770805227d4c337300ff205e8a9e533e65",
  "_from": "co-body@",
  "_resolved": "https://registry.npmjs.org/co-body/-/co-body-1.0.0.tgz"
}
