"use strict";

var Sql = require('Sql');

var recentGamesLimit = 40;

var RecentGames = module.exports;

/*
	returns the most recent games
 */
RecentGames.getRecentGames = function*(recentGamesLimit)
{
	recentGamesLimit = (!recentGamesLimit) ? 40 : recentGamesLimit; // limit to 40 if not set

	var recentGames = [];

	yield Sql.using(function*(db)
	{
		var allGames = yield db.query(
			'SELECT G.played_date, G.game_type_id, GP.* '+
			'FROM games G '+
			'JOIN games_players GP ON G.id = GP.game_id '+
			'ORDER BY G.played_date, G.id DESC ' +
			'LIMIT ' + recentGamesLimit
		);
		// nothing to do
		if(allGames.rowCount == 0) {
			console.log('nothing to do');
			return;
		}

		var allPlayers = yield db.query('SELECT * FROM players');

		var game = [];
		var games = [];
		var j = 1;

		for(var i = 0; i<allGames.rowCount; i+=1) {
			if (allGames.rows[i].game_id == j){
				game.push(allGames.rows[i]);
			} else if (allGames.rows[i].game_id == (j+1)){
				games.push(game);
				j+=1;
				game = [];
				game.push(allGames.rows[i]);
			}
			if (i+1 == allGames.rowCount){
				games.push(game);
			}
		}

		for(var i = 0; i < games.length; i+=1){
			if (games[i].length == 2){
				var gp1 = games[i][0],
					gp2 = games[i][1];
	 
				if(gp1.game_id != gp2.game_id) throw ("Game ids don't match, which shouldn't be possible; "+gp1.game_id+" vs "+gp2.game_id);

				var p1 = allPlayers.rows[gp1.player_id-1],
					p2 = allPlayers.rows[gp2.player_id-1];


				var winner = gp1.score > gp2.score ? p1.name : p2.name;
				var loser = gp1.score > gp2.score ? p2.name : p1.name;
				var winnerScore = gp1.score > gp2.score ? gp1.score : gp2.score;
				var loserScore = gp1.score > gp2.score ? gp2.score : gp1.score;
				var wonBy = Math.max(gp1.score, gp2.score) - Math.min(gp1.score, gp2.score);
				var outOf = gp1.game_type_id == 1 ? 11 : 21;

				// timestamp: Tue Sep 02 2014 23:40:18 GMT-0400 (EDT)
				var timestamp = String(allGames.rows[i].played_date).split(" ");
				var time = timestamp[0] + " - " + timestamp[1] + " " + timestamp[2] + ", " + timestamp[3] + " - " + timestamp[4];


				recentGames.push({"winner": winner, "winnerScore": winnerScore,  "loser": loser, "loserScore": loserScore, "time": time})
				// //{"winner": "George", "winnerScore": "11",  "loser": "Kevin", "loserScore": "8", "time": "2014-08-29 18:35:22"},
			}else if(games[i].length == 4){
				var gp1 = games[i][0],
					gp2 = games[i][1],
					gp3 = games[i][2],
					gp4 = games[i][3];
	 
				if(gp1.game_id != gp4.game_id) throw ("Game ids don't match, which shouldn't be possible; "+gp1.game_id+" vs "+gp2.game_id);

				var p1 = allPlayers.rows[gp1.player_id-1],
					p2 = allPlayers.rows[gp2.player_id-1],
					p3 = allPlayers.rows[gp3.player_id-1],
					p4 = allPlayers.rows[gp4.player_id-1];

				var winner = gp1.score > gp3.score ? (p1.name + " & " + p2.name) : (p3.name + " & " + p4.name);
				var loser = gp1.score > gp3.score ? (p3.name + " & " + p4.name) : (p1.name + " & " + p2.name);
				var winnerScore = gp1.score > gp3.score ? gp1.score : gp3.score;
				var loserScore = gp1.score > gp3.score ? gp3.score : gp1.score;
				var wonBy = Math.max(gp1.score, gp3.score) - Math.min(gp1.score, gp3.score);
				var outOf = gp1.game_type_id == 1 ? 11 : 21;

				// timestamp: Tue Sep 02 2014 23:40:18 GMT-0400 (EDT)
				var timestamp = String(allGames.rows[i].played_date).split(" ");
				var time = timestamp[0] + " - " + timestamp[1] + " " + timestamp[2] + ", " + timestamp[3] + " - " + timestamp[4];

				recentGames.push({"winner": winner, "winnerScore": winnerScore,  "loser": loser, "loserScore": loserScore, "time": time})
			}
		}
	});

	return recentGames.reverse();
};
